-- Fix Security Definer Views - Database Verified
-- Generated by direct database query

-- =============================================================================
-- REMOVE SECURITY DEFINER FROM VIEWS
-- =============================================================================

-- Fix athletes_with_waiver_status view
DROP VIEW IF EXISTS public.athletes_with_waiver_status CASCADE;

-- Recreate athletes_with_waiver_status without SECURITY DEFINER
CREATE VIEW public.athletes_with_waiver_status AS
 SELECT a.id,
    a.parent_id,
    a.name,
    a.first_name,
    a.last_name,
    a.date_of_birth,
    a.gender,
    a.experience,
    a.allergies,
    a.photo,
    a.latest_waiver_id,
    a.waiver_status,
    a.created_at,
    a.updated_at,
    w.signed_at AS waiver_signed_at,
    w.parent_id AS waiver_signature_id,
    w.signature AS waiver_signature_data,
    w.relationship_to_athlete,
    w.created_at AS waiver_created_at,
    concat(p.first_name, ' ', p.last_name) AS waiver_signer_name,
        CASE
            WHEN (w.id IS NOT NULL) THEN true
            ELSE false
        END AS waiver_signed,
        CASE
            WHEN (w.id IS NOT NULL) THEN 'signed'::character varying
            ELSE COALESCE(a.waiver_status, 'pending'::character varying)
        END AS computed_waiver_status
   FROM ((athletes a
     LEFT JOIN waivers w ON ((a.latest_waiver_id = w.id)))
     LEFT JOIN parents p ON ((w.parent_id = p.id)));

-- Fix booking_waiver_status view
DROP VIEW IF EXISTS public.booking_waiver_status CASCADE;

-- Recreate booking_waiver_status without SECURITY DEFINER
CREATE VIEW public.booking_waiver_status AS
 SELECT id AS booking_id,
    get_booking_waiver_status(id) AS waiver_status,
    status AS booking_status
   FROM bookings b;

-- Fix parents_with_waiver_status view
DROP VIEW IF EXISTS public.parents_with_waiver_status CASCADE;

-- Recreate parents_with_waiver_status without SECURITY DEFINER
CREATE VIEW public.parents_with_waiver_status AS
 SELECT p.id AS parent_id,
    p.first_name AS parent_first_name,
    p.last_name AS parent_last_name,
    p.email AS parent_email,
    p.phone AS parent_phone,
    p.emergency_contact_name,
    p.emergency_contact_phone,
    p.created_at AS parent_created_at,
    count(a.id) AS total_athletes,
    count(w.id) AS athletes_with_waivers,
    (count(a.id) - count(w.id)) AS athletes_without_waivers,
    array_agg(json_build_object('athlete_id', a.id, 'athlete_name', COALESCE(concat(a.first_name, ' ', a.last_name), a.name), 'waiver_signed',
        CASE
            WHEN (w.id IS NOT NULL) THEN true
            ELSE false
        END, 'waiver_signed_at', w.signed_at, 'latest_waiver_id', w.id) ORDER BY a.created_at) FILTER (WHERE (a.id IS NOT NULL)) AS athletes_waiver_info
   FROM ((parents p
     LEFT JOIN athletes a ON ((p.id = a.parent_id)))
     LEFT JOIN LATERAL ( SELECT w2.id,
            w2.signed_at
           FROM waivers w2
          WHERE (w2.athlete_id = a.id)
          ORDER BY w2.signed_at DESC
         LIMIT 1) w ON ((a.id IS NOT NULL)))
  GROUP BY p.id, p.first_name, p.last_name, p.email, p.phone, p.emergency_contact_name, p.emergency_contact_phone, p.created_at;

-- =============================================================================
-- REMOVE SECURITY DEFINER FROM FUNCTIONS
-- =============================================================================

-- Note: Function create_booking_with_relations has SECURITY DEFINER
-- This function needs to be recreated without SECURITY DEFINER property
-- Use: CREATE OR REPLACE FUNCTION ... (without SECURITY DEFINER line)

-- Note: Function reset_athlete_waiver_signed has SECURITY DEFINER
-- This function needs to be recreated without SECURITY DEFINER property
-- Use: CREATE OR REPLACE FUNCTION ... (without SECURITY DEFINER line)

-- Note: Function update_athlete_waiver_signed has SECURITY DEFINER
-- This function needs to be recreated without SECURITY DEFINER property
-- Use: CREATE OR REPLACE FUNCTION ... (without SECURITY DEFINER line)

-- Note: Function update_athlete_waiver_status has SECURITY DEFINER
-- This function needs to be recreated without SECURITY DEFINER property
-- Use: CREATE OR REPLACE FUNCTION ... (without SECURITY DEFINER line)

-- =============================================================================
-- GRANT PERMISSIONS
-- =============================================================================

GRANT SELECT ON public.athletes_with_waiver_status TO service_role;
GRANT SELECT ON public.booking_waiver_status TO service_role;
GRANT SELECT ON public.parents_with_waiver_status TO service_role;

-- =============================================================================
-- VERIFICATION
-- =============================================================================
-- Run this query after applying fixes to verify:
/*
SELECT 
    schemaname,
    viewname
FROM pg_views 
WHERE schemaname = 'public'
AND viewname IN ('athletes_with_waiver_status', 'booking_waiver_status', 'parents_with_waiver_status');
*/